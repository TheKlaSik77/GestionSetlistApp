// <auto-generated />
using System;
using GestionSetlistApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionSetlistApp.Migrations
{
    [DbContext(typeof(GestionSetlistDbContext))]
    partial class GestionSetlistDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Evenement", b =>
                {
                    b.Property<int>("EvenementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EvenementId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SetlistId")
                        .HasColumnType("int");

                    b.HasKey("EvenementId");

                    b.HasIndex("SetlistId");

                    b.ToTable("Evenements");
                });

            modelBuilder.Entity("Instrument", b =>
                {
                    b.Property<int>("InstrumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("InstrumentId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("InstrumentId");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("Membre", b =>
                {
                    b.Property<int>("MembreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MembreId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MembreId");

                    b.HasIndex("InstrumentId");

                    b.ToTable("Membres");
                });

            modelBuilder.Entity("MembreEvenement", b =>
                {
                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("EvenementId")
                        .HasColumnType("int");

                    b.HasKey("MembreId", "EvenementId");

                    b.HasIndex("EvenementId");

                    b.ToTable("MembreEvenement");
                });

            modelBuilder.Entity("MembreJoueDe", b =>
                {
                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.HasKey("MembreId", "InstrumentId");

                    b.HasIndex("InstrumentId");

                    b.ToTable("MembreJoueDe");
                });

            modelBuilder.Entity("MembreSetlist", b =>
                {
                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("SetlistId")
                        .HasColumnType("int");

                    b.HasKey("MembreId", "SetlistId");

                    b.HasIndex("SetlistId");

                    b.ToTable("MembreSetlist");
                });

            modelBuilder.Entity("Morceau", b =>
                {
                    b.Property<int>("MorceauId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MorceauId"));

                    b.Property<string>("Album")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Artiste")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DureeMorceau")
                        .HasColumnType("int");

                    b.Property<string>("LienSongsterr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LienYoutube")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MorceauId");

                    b.ToTable("Morceaux");
                });

            modelBuilder.Entity("MorceauSetlist", b =>
                {
                    b.Property<int>("MorceauId")
                        .HasColumnType("int");

                    b.Property<int>("SetlistId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("MorceauId", "SetlistId");

                    b.HasIndex("SetlistId");

                    b.ToTable("MorceauSetlist");
                });

            modelBuilder.Entity("Setlist", b =>
                {
                    b.Property<int>("SetlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SetlistId"));

                    b.Property<int>("DureeSetlist")
                        .HasColumnType("int");

                    b.Property<string>("NomSetlist")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SetlistId");

                    b.ToTable("Setlists");
                });

            modelBuilder.Entity("Evenement", b =>
                {
                    b.HasOne("Setlist", "Setlist")
                        .WithMany("Evenements")
                        .HasForeignKey("SetlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setlist");
                });

            modelBuilder.Entity("Membre", b =>
                {
                    b.HasOne("Instrument", null)
                        .WithMany("Membres")
                        .HasForeignKey("InstrumentId");
                });

            modelBuilder.Entity("MembreEvenement", b =>
                {
                    b.HasOne("Evenement", "Evenement")
                        .WithMany("ListeMembres")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Membre", "Membre")
                        .WithMany("Evenements")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("MembreJoueDe", b =>
                {
                    b.HasOne("Instrument", "Instrument")
                        .WithMany()
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Membre", "Membre")
                        .WithMany("Instruments")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("MembreSetlist", b =>
                {
                    b.HasOne("Membre", "Membre")
                        .WithMany("MembreSetlist")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Setlist", "Setlist")
                        .WithMany("MembreSetlist")
                        .HasForeignKey("SetlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membre");

                    b.Navigation("Setlist");
                });

            modelBuilder.Entity("MorceauSetlist", b =>
                {
                    b.HasOne("Morceau", "Morceau")
                        .WithMany("Setlists")
                        .HasForeignKey("MorceauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Setlist", "Setlist")
                        .WithMany("Morceaux")
                        .HasForeignKey("SetlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Morceau");

                    b.Navigation("Setlist");
                });

            modelBuilder.Entity("Evenement", b =>
                {
                    b.Navigation("ListeMembres");
                });

            modelBuilder.Entity("Instrument", b =>
                {
                    b.Navigation("Membres");
                });

            modelBuilder.Entity("Membre", b =>
                {
                    b.Navigation("Evenements");

                    b.Navigation("Instruments");

                    b.Navigation("MembreSetlist");
                });

            modelBuilder.Entity("Morceau", b =>
                {
                    b.Navigation("Setlists");
                });

            modelBuilder.Entity("Setlist", b =>
                {
                    b.Navigation("Evenements");

                    b.Navigation("MembreSetlist");

                    b.Navigation("Morceaux");
                });
#pragma warning restore 612, 618
        }
    }
}
